name: Development Workflow

on:
  pull_request:
    types: [edited, synchronize, opened, reopened]
    branches:
      - master

env:
  PYTHON_VERSION: '3.9'
  POETRY_VIRTUALENVS_IN_PROJECT: 'true'
  POETRY_NO_INTERACTION: '1'
  DIFFICULTY: ${{ vars.DIFFICULTY || 'medium' }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}

# ðŸ”‘ GitHub fine-grained permissions
permissions:
  contents: read         # needed for actions/checkout
  pull-requests: write   # optional: annotate PRs with lint/test results
  checks: write          # optional: create GitHub Checks entries

jobs:
  lint:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        run: pipx install poetry

      - name: Cache Poetry downloads
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}

      - name: Cache virtualenv (.venv)
        id: venv-cache
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.venv-cache.outputs.cache-hit != 'true'
        run: poetry install --no-root --all-extras

      - name: Ruff format check
        run: poetry run ruff format --check app tests

      - name: Ruff lint
        run: poetry run ruff check app tests

  test:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        run: pipx install poetry

      - name: Cache Poetry downloads
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}-v2

      - name: Cache virtualenv (.venv)
        id: venv-cache
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}-2

      - name: Install dependencies
        if: steps.venv-cache.outputs.cache-hit != 'true'
        run: poetry install --no-root --all-extras

      - name: Run tests
        env:
          USE_INMEMORY_REPO: "true"
          DISABLE_DB_POOL: "true"
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          POOL_MIN: "0"
          POOL_MAX: "10"
        run: PYTHONPATH=. poetry run pytest --cov=app --cov-report=term-missing --cov-report=xml
