services:
  api:
    build: .
    ports: ["8000:8000"]
    env_file: .env
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: supersecret
      POSTGRES_DB: db
    ports: ["5432:5432"]
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 2s
      timeout: 3s
      retries: 20
  migrate:
    build: .
    working_dir: /app
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
        db:
          condition: service_healthy
    volumes:
      - .:/app
    command: >
      sh -c "python -m app.migrate"
    restart: "no"

volumes:
  db_data:
